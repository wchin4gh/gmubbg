// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VOAprototype.Models;

namespace VOAprototype.Migrations
{
    [DbContext(typeof(VOAprototypeContext))]
    [Migration("20190505151545_tbm_items_abstract")]
    partial class tbm_items_abstract
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VOAprototype.Models.ITFunction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Unigram");

                    b.HasKey("Id");

                    b.ToTable("ITFunction");
                });

            modelBuilder.Entity("VOAprototype.Models.ITInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Application")
                        .IsRequired();

                    b.Property<DateTime?>("ApprovalDate");

                    b.Property<string>("BusinessFunction")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("EgovBRM");

                    b.Property<int>("Entity");

                    b.Property<DateTime>("EntryDate");

                    b.Property<DateTime?>("ExpirationDate");

                    b.Property<string>("Finance");

                    b.Property<string>("FirstClassification");

                    b.Property<string>("ITFunction")
                        .IsRequired();

                    b.Property<string>("ITTower")
                        .IsRequired();

                    b.Property<DateTime?>("PurchaseDate");

                    b.Property<int?>("SeatsPerLicense");

                    b.Property<int?>("SeatsUsed");

                    b.Property<string>("SecondClassification");

                    b.Property<string>("TBMCategory");

                    b.Property<string>("TBMITService");

                    b.Property<string>("TBMName");

                    b.Property<string>("ThirdClassification");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Units");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TBMItem");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TBMItem");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMITSubTower", b =>
                {
                    b.HasBaseType("VOAprototype.Models.TBMItem");

                    b.Property<int?>("TBMITTowerId");

                    b.HasIndex("TBMITTowerId");

                    b.HasDiscriminator().HasValue("TBMITSubTower");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMITTower", b =>
                {
                    b.HasBaseType("VOAprototype.Models.TBMItem");

                    b.HasDiscriminator().HasValue("TBMITTower");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMService", b =>
                {
                    b.HasBaseType("VOAprototype.Models.TBMItem");

                    b.HasDiscriminator().HasValue("TBMService");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMServiceCategory", b =>
                {
                    b.HasBaseType("VOAprototype.Models.TBMItem");

                    b.Property<int?>("TBMServiceId");

                    b.HasIndex("TBMServiceId");

                    b.HasDiscriminator().HasValue("TBMServiceCategory");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMServiceName", b =>
                {
                    b.HasBaseType("VOAprototype.Models.TBMItem");

                    b.Property<int?>("TBMServiceCategoryId");

                    b.HasIndex("TBMServiceCategoryId");

                    b.HasDiscriminator().HasValue("TBMServiceName");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMITSubTower", b =>
                {
                    b.HasOne("VOAprototype.Models.TBMITTower")
                        .WithMany("ServiceNames")
                        .HasForeignKey("TBMITTowerId");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMServiceCategory", b =>
                {
                    b.HasOne("VOAprototype.Models.TBMService")
                        .WithMany("ServiceCategories")
                        .HasForeignKey("TBMServiceId");
                });

            modelBuilder.Entity("VOAprototype.Models.TBMServiceName", b =>
                {
                    b.HasOne("VOAprototype.Models.TBMServiceCategory")
                        .WithMany("ServiceNames")
                        .HasForeignKey("TBMServiceCategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
